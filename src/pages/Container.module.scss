// Container.module.scss
// Unified page container styles for all view pages (Identity, Community, Issue)
// Hierarchical SCSS structure following the component hierarchy
@use '../styles/variables' as *;

.container {
  max-width: 100%;
  margin: 0 auto;
  min-height: 100vh;
  background-color: $gray-50;

  .header {
    display: flex;
    flex-direction: column;
    gap: $spacing-md;
    margin-bottom: $spacing-lg;
    padding: $spacing-xl;
    background-color: white;
    border-bottom: 1px solid $gray-200;
    box-shadow: $shadow-sm;

    .headerTop {
      display: flex !important;
      justify-content: space-between !important;
      align-items: center !important;
      width: 100% !important;
      flex-wrap: nowrap !important;
      flex-direction: row !important;

      .headerActions {
        display: flex !important;
        align-items: center;
        gap: $spacing-sm;

        .actionButton {
          display: flex;
          align-items: center;
          gap: $spacing-xs;
          padding: $spacing-sm $spacing-md;
          background-color: $primary;
          color: white;
          border: none;
          border-radius: $radius-md;
          font-size: $text-sm;
          font-weight: $font-medium;
          cursor: pointer;
          transition: all $transition-base;
          flex-shrink: 0;
          white-space: nowrap;

          &:hover {
            background-color: $primary-dark;
            transform: translateY(-1px);
          }

          &:active {
            transform: translateY(0);
          }

          svg {
            flex-shrink: 0;
          }

          span {
            white-space: nowrap;
          }
        }
      }

      .backButton {
        display: flex;
        align-items: center;
        gap: $spacing-sm;
        padding: $spacing-sm $spacing-lg;
        background-color: transparent;
        color: $gray-500;
        border: 1px solid $gray-300;
        border-radius: $radius-md;
        font-size: $text-sm;
        cursor: pointer;
        transition: all $transition-base;
        flex-shrink: 0;
        white-space: nowrap;

        &:hover {
          background-color: $gray-100;
          color: $gray-700;
        }
      }

    }

    .headerBottom {
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;

      .info {
        width: 100%;

        .titleRow {
          display: flex !important;
          justify-content: space-between !important;
          align-items: center !important;
          margin-bottom: $spacing-xs;
          flex-direction: row !important;

          h1 {
            font-size: $text-xl;
            font-weight: $font-bold;
            color: $gray-800;
            margin: 0;
            flex-shrink: 0;
          }

          .stat {
            display: flex !important;
            align-items: center;
            gap: $spacing-sm;
            color: $gray-600;
            font-size: $text-sm;
            flex-shrink: 0;
            white-space: nowrap;
          }
        }

        p {
          color: $gray-600;
          margin: 0;
          font-size: $text-sm;
        }
      }
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    gap: $spacing-lg;
    padding: 0 $spacing-xl $spacing-xl;

    .nav {
      display: flex;
      justify-content: center;
      background: white;
      border-radius: $radius-lg;
      box-shadow: $shadow-sm;
      padding: $spacing-md $spacing-sm;
      gap: 0;
      overflow-x: visible;

      .navItem {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: $spacing-xs;
        padding: $spacing-md $spacing-sm;
        min-width: 0;
        flex: 1;
        color: $gray-600;
        font-weight: $font-medium;
        font-size: $text-sm;
        background: transparent;
        border: none;
        border-radius: $radius-md;
        cursor: pointer;
        transition: all $transition-base;
        position: relative;

        // Icon size
        svg {
          width: 24px;
          height: 24px;
          flex-shrink: 0;
        }

        // Text styling
        span {
          text-align: center;
          line-height: 1.2;
          max-width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
        }

        &:hover {
          background-color: $gray-100;
          color: $gray-800;
          transform: translateY(-2px);

          svg {
            transform: scale(1.1);
          }
        }

        &.active {
          background-color: $primary;
          color: white;

          &::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 60%;
            height: 3px;
            background-color: white;
            border-radius: $radius-full;
          }

          &:hover {
            background-color: $primary-dark;
          }
        }
      }
    }

    .main {
      flex: 1;
      background: white;
      border-radius: $radius-lg;
      box-shadow: $shadow-sm;
      padding: $spacing-xl;
      min-height: 400px;
    }
  }

  .loadingState,
  .errorState {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 400px;
    padding: $spacing-3xl;
    text-align: center;

    .spinner {
      width: 40px;
      height: 40px;
      border: 3px solid $gray-200;
      border-top: 3px solid $primary;
      border-radius: $radius-full;
      animation: spin 1s linear infinite;
      margin-bottom: $spacing-lg;
    }

    h2 {
      margin-bottom: $spacing-sm;
      color: $gray-800;
    }

    p {
      color: $gray-600;
      margin-bottom: $spacing-xl;
    }
  }

  .errorState h2 {
    color: $error;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// Responsive design
@media (max-width: $breakpoint-sm) {
  .container {
    .header {
      .headerTop {
        flex-direction: column;
        align-items: flex-start;
        gap: $spacing-md;
        width: 100%;
      }

      .headerBottom {
        .info {
          .titleRow {
            flex-direction: column;
            align-items: flex-start;
            gap: $spacing-sm;
          }
        }
      }
    }

    .content {
      padding: 0 $spacing-lg $spacing-lg;

      .nav {
        padding: $spacing-sm;
        
        .navItem {
          padding: $spacing-sm;
          
          svg {
            width: 20px;
            height: 20px;
          }

          span {
            font-size: $text-sm;
          }
        }
      }

      .main {
        padding: $spacing-lg;
      }
    }
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .container {
    background-color: $dark-surface;

    .header,
    .content .nav,
    .content .main {
      background-color: $dark-bg;
      border-color: $dark-border;
    }

    .header {
      .headerTop {
        .backButton {
          color: $dark-text-secondary;
          border-color: $dark-border;

          &:hover {
            background-color: $dark-border;
            color: $dark-text;
          }
        }

        .headerActions {
          .actionButton {
            background-color: $primary;
            color: white;

            &:hover {
              background-color: $primary-dark;
            }
          }
        }
      }

      .headerBottom {
        .info {
          h1 {
            color: $dark-text;
          }

          p {
            color: $dark-text-secondary;
          }

          .titleRow .logoutButton {
            background-color: $dark-surface;
            color: $dark-text;
            border-color: $dark-border;

            &:hover {
              background-color: #7f1d1d;
              color: white;
              border-color: #991b1b;
            }
          }
        }

        .stat {
          color: $dark-text-secondary;
        }
      }
    }

    .content .nav .navItem {
      color: $dark-text-secondary;

      &:hover {
        background-color: $dark-border;
        color: $dark-text;
      }

      &.active {
        background-color: $primary;
        color: white;

        &::after {
          background-color: white;
        }
      }
    }

    .loadingState,
    .errorState {
      .spinner {
        border: 3px solid $dark-border;
        border-top: 3px solid $primary;
      }

      h2 {
        color: $dark-text;
      }

      p {
        color: $dark-text-secondary;
      }
    }
  }
}

